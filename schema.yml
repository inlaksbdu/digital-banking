openapi: 3.0.3
info:
  title: Digital Bankin API's
  version: 1.0.0
  description: Api Documentation fo Digital Banking API. @Copyright INLAKS. Reach
    out to me on pacheampong@inlaks.com
paths:
  /auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - Password Change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
  /auth/password/check-old-password/:
    post:
      operationId: auth_password_check_old_password_create
      description: This view verifies the otp sent for password reset.
      tags:
      - Password Reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOldPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOldPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOldPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOldPassword'
          description: ''
  /auth/password/forgot-password/:
    post:
      operationId: auth_password_forgot_password_create
      description: This view sends otp to users who wants to reset thier password.
      tags:
      - Password Reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordOtpRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordOtp'
          description: ''
  /auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: This view sends otp to users who wants to reset thier password.
      tags:
      - Password Reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /auth/password/verify-reset-otp/:
    post:
      operationId: auth_password_verify_reset_otp_create
      description: This view verifies the otp sent for password reset.
      tags:
      - Password Reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyResetPasswordOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyResetPasswordOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyResetPasswordOtpRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResetPasswordOtp'
          description: ''
  /auth/pin/forgot-pin/:
    post:
      operationId: auth_pin_forgot_pin_create
      description: This view sends otp to users who wants to reset thier password.
      tags:
      - Customer PIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPINRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPINRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgotPINRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPIN'
          description: ''
  /auth/pin/set-pin/{id}/:
    patch:
      operationId: auth_pin_set_pin_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Customer PIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSetCusotmerPINRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSetCusotmerPINRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSetCusotmerPINRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetCusotmerPIN'
          description: ''
  /auth/pin/verify/:
    post:
      operationId: auth_pin_verify_create
      description: This view verifies the otp sent for password reset.
      tags:
      - Customer PIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPINRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyPINRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyPINRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPIN'
          description: ''
  /auth/profile/:
    get:
      operationId: auth_profile_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /auth/signup/existing-customer/:
    post:
      operationId: auth_signup_existing_customer_create
      tags:
      - Signup Existing Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpExistingCustomer'
          description: ''
  /auth/signup/existing-customer/validate/:
    post:
      operationId: auth_signup_existing_customer_validate_create
      tags:
      - Signup Existing Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerEmailAccountValidationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerEmailAccountValidationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerEmailAccountValidationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpExistingCustomerEmailAccountValidation'
          description: ''
  /auth/signup/existing-customer/verify/:
    post:
      operationId: auth_signup_existing_customer_verify_create
      tags:
      - Signup Existing Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpExistingCustomerVerifyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpExistingCustomerVerify'
          description: ''
  /auth/signup/new-customer/:
    post:
      operationId: auth_signup_new_customer_create
      tags:
      - Signup New Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpNewCustomer'
          description: ''
  /auth/signup/new-customer/validate/:
    post:
      operationId: auth_signup_new_customer_validate_create
      tags:
      - Signup New Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerValidationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerValidationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerValidationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpNewCustomerValidation'
          description: ''
  /auth/signup/new-customer/verify/:
    post:
      operationId: auth_signup_new_customer_verify_create
      tags:
      - Signup New Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpNewCustomerVerifyRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpNewCustomerVerify'
          description: ''
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/token/verify/:
    post:
      operationId: auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /cbs/appointment-booking/:
    get:
      operationId: cbs_appointment_booking_list
      parameters:
      - in: query
        name: booking_type
        schema:
          type: string
          enum:
          - SELF
          - THIRD PARTY
        description: |-
          * `SELF` - Self
          * `THIRD PARTY` - Third Party
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service_type
        schema:
          type: string
          nullable: true
          enum:
          - CASH DEPOSIT
          - CASH WITHDRAWAL
          - CHEQUE DEPOSIT
          - CHEQUE WITHDRAWAL
          - ENQUIRY
        description: |-
          * `CASH DEPOSIT` - Cash Deposit
          * `CASH WITHDRAWAL` - Cash Withdrawal
          * `CHEQUE DEPOSIT` - Cheque Deposit
          * `CHEQUE WITHDRAWAL` - Cheque Withdrawal
          * `ENQUIRY` - Enquiry
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - COMPLETED
          - UPCOMING
        description: |-
          * `UPCOMING` - Upcoming
          * `COMPLETED` - Completed
          * `CANCELLED` - Cancelled
      tags:
      - Appointment Booking
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentSeriailzerList'
          description: ''
    post:
      operationId: cbs_appointment_booking_create
      tags:
      - Appointment Booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentSeriailzerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentSeriailzerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentSeriailzerRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSeriailzer'
          description: ''
  /cbs/appointment-booking/{id}/:
    get:
      operationId: cbs_appointment_booking_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment booking.
        required: true
      tags:
      - Appointment Booking
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSeriailzer'
          description: ''
  /cbs/bank-accounts/:
    get:
      operationId: cbs_bank_accounts_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Bank Accounts
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankAccountList'
          description: ''
    post:
      operationId: cbs_bank_accounts_create
      tags:
      - Bank Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
  /cbs/bank-accounts/{id}/:
    get:
      operationId: cbs_bank_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bank account.
        required: true
      tags:
      - Bank Accounts
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
  /cbs/bank-accounts/{id}/e-statement/:
    post:
      operationId: cbs_bank_accounts_e_statement_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bank account.
        required: true
      tags:
      - Bank Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountStatementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountStatementRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatement'
          description: ''
  /cbs/bank-accounts/{id}/mini-statement/:
    post:
      operationId: cbs_bank_accounts_mini_statement_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bank account.
        required: true
      tags:
      - Bank Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountStatementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountStatementRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatement'
          description: ''
  /cbs/bank-accounts/{id}/set-as-default/:
    get:
      operationId: cbs_bank_accounts_set_as_default_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bank account.
        required: true
      tags:
      - Bank Accounts
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
  /cbs/bank-accounts/check-balance/:
    post:
      operationId: cbs_bank_accounts_check_balance_create
      tags:
      - Bank Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAccountNumber'
          description: ''
  /cbs/bank-accounts/validate-account/:
    post:
      operationId: cbs_bank_accounts_validate_account_create
      tags:
      - Bank Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAccountNumber'
          description: ''
  /cbs/bank-statement/:
    get:
      operationId: cbs_bank_statement_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Official Bank Statement
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankStatementList'
          description: ''
    post:
      operationId: cbs_bank_statement_create
      tags:
      - Official Bank Statement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatement'
          description: ''
  /cbs/bank-statement/{id}/:
    get:
      operationId: cbs_bank_statement_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bank statement.
        required: true
      tags:
      - Official Bank Statement
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatement'
          description: ''
  /cbs/beneficiary/:
    get:
      operationId: cbs_beneficiary_list
      parameters:
      - in: query
        name: beneficiary_type
        schema:
          type: string
          enum:
          - Account To Wallet
          - Airtime
          - Bill Payment
          - Data
          - International Transfer
          - Other Bank
          - Same Bank
        description: |-
          * `Airtime` - Airtme
          * `Data` - Data
          * `Same Bank` - Same Bank
          * `Other Bank` - Other Bank
          * `Account To Wallet` - Account To Wallet
          * `International Transfer` - International Transfer
          * `Bill Payment` - Bill Paymnet
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Beneficiary
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBeneficiaryList'
          description: ''
    post:
      operationId: cbs_beneficiary_create
      tags:
      - Beneficiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BeneficiaryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BeneficiaryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
          description: ''
  /cbs/beneficiary/{id}/:
    get:
      operationId: cbs_beneficiary_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this beneficiary.
        required: true
      tags:
      - Beneficiary
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
          description: ''
  /cbs/bill-sharing/:
    get:
      operationId: cbs_bill_sharing_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Bill Sharing
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBillSharingList'
          description: ''
    post:
      operationId: cbs_bill_sharing_create
      tags:
      - Bill Sharing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillSharingCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillSharingCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillSharingCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillSharingCreate'
          description: ''
  /cbs/bill-sharing-payee/:
    get:
      operationId: cbs_bill_sharing_payee_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - FAILED
          - PAID
          - PENDING
          - REJECTED
        description: |-
          * `PENDING` - Pending
          * `PAID` - Paid
          * `REJECTED` - Rejected
          * `FAILED` - Failed
      tags:
      - Bill Sharing
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBillSharingPayeeList'
          description: ''
    post:
      operationId: cbs_bill_sharing_payee_create
      tags:
      - Bill Sharing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillSharingPayeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillSharingPayeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillSharingPayeeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillSharingPayee'
          description: ''
  /cbs/bill-sharing-payee/{id}/:
    get:
      operationId: cbs_bill_sharing_payee_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bill sharing pyee.
        required: true
      tags:
      - Bill Sharing
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillSharingPayee'
          description: ''
  /cbs/bill-sharing-payee/{id}/make-payment/:
    post:
      operationId: cbs_bill_sharing_payee_make_payment_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bill sharing pyee.
        required: true
      tags:
      - Bill Sharing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeBillSharingPaymentAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MakeBillSharingPaymentAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MakeBillSharingPaymentAccountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakeBillSharingPaymentAccount'
          description: ''
  /cbs/bill-sharing-payee/{id}/reject-request/:
    post:
      operationId: cbs_bill_sharing_payee_reject_request_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bill sharing pyee.
        required: true
      tags:
      - Bill Sharing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectBillSharingRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RejectBillSharingRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RejectBillSharingRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectBillSharingRequest'
          description: ''
  /cbs/bill-sharing-payee/share-with/:
    get:
      operationId: cbs_bill_sharing_payee_share_with_retrieve
      tags:
      - Bill Sharing
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /cbs/bill-sharing/{id}/:
    get:
      operationId: cbs_bill_sharing_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bill sharing.
        required: true
      tags:
      - Bill Sharing
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillSharing'
          description: ''
    patch:
      operationId: cbs_bill_sharing_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bill sharing.
        required: true
      tags:
      - Bill Sharing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBillSharingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBillSharingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBillSharingRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillSharing'
          description: ''
  /cbs/bill-sharing/{id}/get-payees/:
    get:
      operationId: cbs_bill_sharing_get_payees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bill sharing.
        required: true
      tags:
      - Bill Sharing
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /cbs/card-management/:
    get:
      operationId: cbs_card_management_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Card Management
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardManagementList'
          description: ''
    post:
      operationId: cbs_card_management_create
      tags:
      - Card Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardManagementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CardManagementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CardManagementRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardManagement'
          description: ''
  /cbs/card-management/{id}/:
    get:
      operationId: cbs_card_management_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card management.
        required: true
      tags:
      - Card Management
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardManagement'
          description: ''
  /cbs/card-requests/:
    get:
      operationId: cbs_card_requests_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Card Request
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardRequestList'
          description: ''
    post:
      operationId: cbs_card_requests_create
      tags:
      - Card Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CardRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CardRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardRequest'
          description: ''
  /cbs/card-requests/{id}/:
    get:
      operationId: cbs_card_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card request.
        required: true
      tags:
      - Card Request
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardRequest'
          description: ''
  /cbs/cardless-withdrawal/:
    get:
      operationId: cbs_cardless_withdrawal_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: token_expired
        schema:
          type: boolean
      - in: query
        name: token_redeemed
        schema:
          type: boolean
      - in: query
        name: withdrawal_party
        schema:
          type: string
          nullable: true
          enum:
          - SELF
          - THIRD_PARTY
        description: |-
          * `SELF` - Self
          * `THIRD_PARTY` - Third Party
      tags:
      - Cardless Withdrawal
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardlessWithdrawalList'
          description: ''
    post:
      operationId: cbs_cardless_withdrawal_create
      tags:
      - Cardless Withdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardlessWithdrawalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CardlessWithdrawalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CardlessWithdrawalRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardlessWithdrawal'
          description: ''
  /cbs/cardless-withdrawal/{id}/:
    get:
      operationId: cbs_cardless_withdrawal_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cardless withdrawal.
        required: true
      tags:
      - Cardless Withdrawal
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardlessWithdrawal'
          description: ''
  /cbs/cardless-withdrawal/validate-token/:
    post:
      operationId: cbs_cardless_withdrawal_validate_token_create
      tags:
      - Cardless Withdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCardlessWithdrawalTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateCardlessWithdrawalTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateCardlessWithdrawalTokenRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCardlessWithdrawalToken'
          description: ''
  /cbs/cards/:
    get:
      operationId: cbs_cards_list
      parameters:
      - in: query
        name: card_form
        schema:
          type: string
          enum:
          - PHYSICAL CARD
          - VIRTUAL CARD
        description: |-
          * `PHYSICAL CARD` - Physical
          * `VIRTUAL CARD` - Virtual
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: virtual_card_type
        schema:
          type: string
          nullable: true
          enum:
          - GIFT CARD
          - SHOPPING CARD
        description: |-
          * `GIFT CARD` - Gift Card
          * `SHOPPING CARD` - Shopping Card
      tags:
      - Cards
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardList'
          description: ''
    post:
      operationId: cbs_cards_create
      tags:
      - Cards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CardRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CardRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
  /cbs/cards/{id}/:
    get:
      operationId: cbs_cards_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card.
        required: true
      tags:
      - Cards
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
    delete:
      operationId: cbs_cards_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card.
        required: true
      tags:
      - Cards
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /cbs/cards/{id}/virtual-card-topup/:
    post:
      operationId: cbs_cards_virtual_card_topup_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card.
        required: true
      tags:
      - Cards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualCardTopUpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualCardTopUpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualCardTopUpRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCardTopUp'
          description: ''
  /cbs/cards/create-virtual-card/:
    post:
      operationId: cbs_cards_create_virtual_card_create
      tags:
      - Cards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateVirtualCardRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateVirtualCardRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVirtualCard'
          description: ''
  /cbs/cheque-request/:
    get:
      operationId: cbs_cheque_request_list
      parameters:
      - in: query
        name: cheque_request_type
        schema:
          type: string
          enum:
          - BLOCK CHEQUE
          - CHEQUE REQUEST
          - CONFIRM CHEQUE
        description: |-
          * `CHEQUE REQUEST` - Cheque Request
          * `BLOCK CHEQUE` - Block Cheque Request
          * `CONFIRM CHEQUE` - Cheque Confirmation
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Cheque Requests
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChequeRequestList'
          description: ''
    post:
      operationId: cbs_cheque_request_create
      tags:
      - Cheque Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChequeRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChequeRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChequeRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeRequest'
          description: ''
  /cbs/cheque-request/{id}/:
    get:
      operationId: cbs_cheque_request_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cheque request.
        required: true
      tags:
      - Cheque Requests
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeRequest'
          description: ''
  /cbs/email-indemnity/:
    get:
      operationId: cbs_email_indemnity_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Email Indemnity
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailIndemnityList'
          description: ''
    post:
      operationId: cbs_email_indemnity_create
      tags:
      - Email Indemnity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailIndemnityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailIndemnityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailIndemnityRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailIndemnity'
          description: ''
  /cbs/email-indemnity/{id}/:
    get:
      operationId: cbs_email_indemnity_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email indemnity.
        required: true
      tags:
      - Email Indemnity
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailIndemnity'
          description: ''
    patch:
      operationId: cbs_email_indemnity_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email indemnity.
        required: true
      tags:
      - Email Indemnity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailIndemnityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailIndemnityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailIndemnityRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailIndemnity'
          description: ''
  /cbs/expense-limit/:
    get:
      operationId: cbs_expense_limit_list
      parameters:
      - in: query
        name: limit_type
        schema:
          type: string
          nullable: true
          enum:
          - Account Budget
          - Categorical Budget
        description: |-
          * `Account Budget` - Account Budget
          * `Categorical Budget` - Categorical Budget
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
      tags:
      - Expense Limit
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseLimitList'
          description: ''
    post:
      operationId: cbs_expense_limit_create
      tags:
      - Expense Limit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseLimitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpenseLimitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpenseLimitRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseLimit'
          description: ''
  /cbs/expense-limit/{id}/:
    get:
      operationId: cbs_expense_limit_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expense limit.
        required: true
      tags:
      - Expense Limit
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseLimit'
          description: ''
  /cbs/fx-rates/:
    get:
      operationId: cbs_fx_rates_retrieve
      tags:
      - FX Rates
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /cbs/loan-categories/:
    get:
      operationId: cbs_loan_categories_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Loans
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanCategoryList'
          description: ''
  /cbs/loan-categories/{id}/:
    get:
      operationId: cbs_loan_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this loan category.
        required: true
      tags:
      - Loans
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanCategory'
          description: ''
  /cbs/loan-requests/:
    get:
      operationId: cbs_loan_requests_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Loans
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanRequestList'
          description: ''
    post:
      operationId: cbs_loan_requests_create
      tags:
      - Loans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRequestCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoanRequestCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoanRequestCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanRequestCreate'
          description: ''
  /cbs/loan-requests/{id}/:
    get:
      operationId: cbs_loan_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this loan request.
        required: true
      tags:
      - Loans
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanRequest'
          description: ''
  /cbs/loan-requests/applied-loan/:
    get:
      operationId: cbs_loan_requests_applied_loan_retrieve
      tags:
      - Loans
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /cbs/loan-requests/current-loans/:
    get:
      operationId: cbs_loan_requests_current_loans_retrieve
      tags:
      - Loans
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /cbs/payment-billers/:
    get:
      operationId: cbs_payment_billers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentBillerList'
          description: ''
    post:
      operationId: cbs_payment_billers_create
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentBillerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentBillerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentBillerRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentBiller'
          description: ''
  /cbs/payment-billers/{id}/:
    get:
      operationId: cbs_payment_billers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment biller.
        required: true
      tags:
      - Payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentBiller'
          description: ''
  /cbs/payment-billers/{id}/validate-number/:
    post:
      operationId: cbs_payment_billers_validate_number_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment biller.
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateBillerNumberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateBillerNumberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateBillerNumberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateBillerNumber'
          description: ''
  /cbs/payments/:
    get:
      operationId: cbs_payments_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: cbs_payments_create
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /cbs/payments/{id}/:
    get:
      operationId: cbs_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - Payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /cbs/standing-order/:
    get:
      operationId: cbs_standing_order_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: standing_order_type
        schema:
          type: string
          enum:
          - Account To Wallet
          - Airtime
          - Bill Payment
          - Other Bank
          - Same Bank
        description: |-
          * `Airtime` - Own Account Transfer
          * `Same Bank` - Same Bank
          * `Other Bank` - Other Bank
          * `Account To Wallet` - Account To Wallet
          * `Bill Payment` - Bill Paymnet
      tags:
      - Standing Order
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStandingOrderList'
          description: ''
    post:
      operationId: cbs_standing_order_create
      tags:
      - Standing Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandingOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StandingOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StandingOrderRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrder'
          description: ''
  /cbs/standing-order/{id}/:
    get:
      operationId: cbs_standing_order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this standing order.
        required: true
      tags:
      - Standing Order
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrder'
          description: ''
  /cbs/transfer/:
    get:
      operationId: cbs_transfer_list
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_account
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      - in: query
        name: status
        schema:
          type: string
          enum:
          - Failed
          - Pending
          - Success
        description: |-
          * `Pending` - Pending
          * `Success` - Success
          * `Failed` - Failed
      - in: query
        name: transfer_type
        schema:
          type: string
          enum:
          - Account To Wallet
          - International Transfer
          - Other Bank Transfer
          - Own Account Transfer
          - Same Bank Transfer
        description: |-
          * `Own Account Transfer` - Own Account Transfer
          * `Same Bank Transfer` - Same Bank Transfer
          * `Other Bank Transfer` - Other Bank Transfer
          * `International Transfer` - International Transfer
          * `Account To Wallet` - Account To Wallet
      tags:
      - Transfers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransferList'
          description: ''
    post:
      operationId: cbs_transfer_create
      tags:
      - Transfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransferRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransferRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
  /cbs/transfer/{id}/:
    get:
      operationId: cbs_transfer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transfer.
        required: true
      tags:
      - Transfers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
    patch:
      operationId: cbs_transfer_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transfer.
        required: true
      tags:
      - Transfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransferRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransferRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransferRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: ''
  /cbs/travel-notice/:
    get:
      operationId: cbs_travel_notice_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Travel Notice
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTravelNoticeList'
          description: ''
    post:
      operationId: cbs_travel_notice_create
      tags:
      - Travel Notice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelNoticeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TravelNoticeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TravelNoticeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelNotice'
          description: ''
  /cbs/travel-notice/{id}/:
    get:
      operationId: cbs_travel_notice_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this travel notice.
        required: true
      tags:
      - Travel Notice
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelNotice'
          description: ''
  /chatbot/chat/stream/:
    post:
      operationId: chatbot_chat_stream_create
      description: Streaming chat endpoint with SSE
      tags:
      - chatbot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMessageRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /chatbot/conversations/:
    get:
      operationId: chatbot_conversations_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chatbot
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConversationThreadListList'
          description: ''
  /chatbot/conversations/{thread_id}/:
    get:
      operationId: chatbot_conversations_retrieve
      parameters:
      - in: path
        name: thread_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chatbot
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationThread'
          description: ''
  /chatbot/conversations/{thread_id}/delete/:
    delete:
      operationId: chatbot_conversations_delete_destroy
      parameters:
      - in: path
        name: thread_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chatbot
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /chatbot/conversations/create/:
    post:
      operationId: chatbot_conversations_create_create
      tags:
      - chatbot
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationThreadCreate'
          description: ''
  /datatables/account-types/:
    get:
      operationId: datatables_account_types_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountCategoryList'
          description: ''
  /datatables/account-types/{id}/:
    get:
      operationId: datatables_account_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account category.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCategory'
          description: ''
  /datatables/atm/:
    get:
      operationId: datatables_atm_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedATMList'
          description: ''
  /datatables/atm/{id}/:
    get:
      operationId: datatables_atm_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this atm.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ATM'
          description: ''
  /datatables/branches/:
    get:
      operationId: datatables_branches_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankBranchList'
          description: ''
  /datatables/branches/{id}/:
    get:
      operationId: datatables_branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bank branch.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankBranch'
          description: ''
  /datatables/card-service-reason/:
    get:
      operationId: datatables_card_service_reason_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardReasonList'
          description: ''
  /datatables/card-service-reason/{id}/:
    get:
      operationId: datatables_card_service_reason_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card service reason.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardReason'
          description: ''
  /datatables/id-type/:
    get:
      operationId: datatables_id_type_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIDTypeList'
          description: ''
  /datatables/id-type/{id}/:
    get:
      operationId: datatables_id_type_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this id type.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDType'
          description: ''
  /datatables/network-proviers/:
    get:
      operationId: datatables_network_proviers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Network Provider
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNetworkProviderList'
          description: ''
    post:
      operationId: datatables_network_proviers_create
      tags:
      - Network Provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NetworkProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NetworkProviderRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProvider'
          description: ''
  /datatables/network-proviers/{id}/:
    get:
      operationId: datatables_network_proviers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this network provider.
        required: true
      tags:
      - Network Provider
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProvider'
          description: ''
  /datatables/network-proviers/{id}/validate-number/:
    post:
      operationId: datatables_network_proviers_validate_number_create
      description: this action is used validate a swift number
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this network provider.
        required: true
      tags:
      - Network Provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePhoneNumberSeriailzerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidatePhoneNumberSeriailzerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidatePhoneNumberSeriailzerRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePhoneNumberSeriailzer'
          description: ''
  /datatables/occupation/:
    get:
      operationId: datatables_occupation_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOccupationList'
          description: ''
  /datatables/occupation/{id}/:
    get:
      operationId: datatables_occupation_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this occupation.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Occupation'
          description: ''
  /datatables/other-banks/:
    get:
      operationId: datatables_other_banks_list
      parameters:
      - in: query
        name: country
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Other Banks
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOtherBankList'
          description: ''
    post:
      operationId: datatables_other_banks_create
      tags:
      - Other Banks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherBankRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OtherBankRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OtherBankRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherBank'
          description: ''
  /datatables/other-banks/{id}/:
    get:
      operationId: datatables_other_banks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this other bank.
        required: true
      tags:
      - Other Banks
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherBank'
          description: ''
  /datatables/other-banks/{id}/validate-account/:
    post:
      operationId: datatables_other_banks_validate_account_create
      description: this action is used validate a swift number
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this other bank.
        required: true
      tags:
      - Other Banks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateAccountNumberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAccountNumber'
          description: ''
  /datatables/security-question/:
    get:
      operationId: datatables_security_question_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSecurityQuestionList'
          description: ''
  /datatables/security-question/{id}/:
    get:
      operationId: datatables_security_question_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this security question.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityQuestion'
          description: ''
  /datatables/swift-code/:
    get:
      operationId: datatables_swift_code_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSwiftCodeList'
          description: ''
    post:
      operationId: datatables_swift_code_create
      tags:
      - datatables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwiftCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SwiftCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SwiftCodeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwiftCode'
          description: ''
  /datatables/swift-code/{id}/:
    get:
      operationId: datatables_swift_code_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this swift code.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwiftCode'
          description: ''
  /datatables/swift-code/validate-code/:
    post:
      operationId: datatables_swift_code_validate_code_create
      description: this action is used validate a swift number
      tags:
      - datatables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateSwiftCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateSwiftCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateSwiftCodeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateSwiftCode'
          description: ''
  /datatables/telco-data-plan/:
    get:
      operationId: datatables_telco_data_plan_list
      parameters:
      - in: query
        name: network
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTelcoDataPlanList'
          description: ''
  /datatables/telco-data-plan/{id}/:
    get:
      operationId: datatables_telco_data_plan_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this telco data plan.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelcoDataPlan'
          description: ''
  /datatables/terms-and-conditions/:
    get:
      operationId: datatables_terms_and_conditions_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTermsAndConditionList'
          description: ''
  /datatables/terms-and-conditions/{id}/:
    get:
      operationId: datatables_terms_and_conditions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this terms and condition.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndCondition'
          description: ''
  /datatables/transaction-purpose/:
    get:
      operationId: datatables_transaction_purpose_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTranscationPurposeList'
          description: ''
  /datatables/transaction-purpose/{id}/:
    get:
      operationId: datatables_transaction_purpose_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction purpose.
        required: true
      tags:
      - datatables
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscationPurpose'
          description: ''
  /ocr/admin/id-cards/:
    get:
      operationId: ocr_admin_id_cards_list
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: decision
        schema:
          type: string
          enum:
          - approved
          - pending
          - rejected
          - review
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `review` - Needs Review
      - in: query
        name: document_type
        schema:
          type: string
          enum:
          - driver_license
          - national_id
          - passport
        description: |-
          * `passport` - Passport
          * `national_id` - National ID
          * `driver_license` - Driver License
      - in: query
        name: is_confirmed
        schema:
          type: boolean
      - in: query
        name: max_confidence
        schema:
          type: number
      - in: query
        name: min_confidence
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: verified
        schema:
          type: boolean
      tags:
      - ocr
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIdCardList'
          description: ''
  /ocr/admin/id-cards/{id}/delete/:
    delete:
      operationId: ocr_admin_id_cards_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ocr
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /ocr/documents/upload/:
    post:
      operationId: ocr_documents_upload_create
      tags:
      - ocr
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdCardCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IdCardCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdCardCreate'
          description: ''
  /ocr/id-cards/{id}/confirm/:
    put:
      operationId: ocr_id_cards_confirm_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ocr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdCardConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IdCardConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdCardConfirmRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdCardConfirm'
          description: ''
    patch:
      operationId: ocr_id_cards_confirm_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - ocr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIdCardConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIdCardConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIdCardConfirmRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdCardConfirm'
          description: ''
  /ocr/id-cards/detail/:
    get:
      operationId: ocr_id_cards_detail_retrieve
      tags:
      - ocr
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdCard'
          description: ''
  /ocr/onboarding/stage/:
    get:
      operationId: ocr_onboarding_stage_retrieve
      tags:
      - ocr
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingStage'
          description: ''
components:
  schemas:
    ATM:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        country:
          type: string
          maxLength: 240
        langtitude_cordinates:
          type: string
          nullable: true
          maxLength: 240
        longitude_cordinates:
          type: string
          nullable: true
          maxLength: 240
        address:
          type: string
          nullable: true
          maxLength: 400
      required:
      - id
    AccountCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        account_type:
          $ref: '#/components/schemas/AccountTypeEnum'
        name:
          type: string
          maxLength: 240
        category:
          type: string
          maxLength: 20
      required:
      - account_type
      - category
      - id
      - name
    AccountStatement:
      type: object
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        email:
          type: string
          format: email
          nullable: true
      required:
      - end_date
      - start_date
    AccountStatementRequest:
      type: object
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        email:
          type: string
          format: email
          nullable: true
          minLength: 1
      required:
      - end_date
      - start_date
    AccountTypeEnum:
      enum:
      - Current Local
      - Current Joint
      - Current Com
      - Current FCA
      - Current FEA
      - Savings Local
      type: string
      description: |-
        * `Current Local` - Current Local
        * `Current Joint` - Current Joint
        * `Current Com` - Current Com
        * `Current FCA` - Current Fca
        * `Current FEA` - Current Fea
        * `Savings Local` - Savings Local
    AppointmentSeriailzer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        service_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ServiceTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        source_account:
          type: string
          nullable: true
          maxLength: 100
        source_account_name:
          type: string
          nullable: true
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          nullable: true
        currency:
          type: string
          nullable: true
          maxLength: 100
        cheque_number:
          type: string
          nullable: true
          maxLength: 100
        name_of_cheque_issuer:
          type: string
          nullable: true
          maxLength: 100
        issuing_bank:
          type: integer
          nullable: true
        booking_type:
          $ref: '#/components/schemas/BookingTypeEnum'
        fullname:
          type: string
          maxLength: 100
        id_number:
          type: string
          nullable: true
          maxLength: 100
        phone_number:
          type: string
          maxLength: 128
        branch:
          type: integer
          nullable: true
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        booking_code:
          type: string
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/AppointmentSeriailzerStatusEnum'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - booking_code
      - booking_type
      - date
      - date_created
      - fullname
      - id
      - phone_number
      - status
      - time
      - user
    AppointmentSeriailzerRequest:
      type: object
      properties:
        service_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ServiceTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        source_account:
          type: string
          nullable: true
          maxLength: 100
        source_account_name:
          type: string
          nullable: true
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          nullable: true
        currency:
          type: string
          nullable: true
          maxLength: 100
        cheque_number:
          type: string
          nullable: true
          maxLength: 100
        name_of_cheque_issuer:
          type: string
          nullable: true
          maxLength: 100
        issuing_bank:
          type: integer
          nullable: true
        booking_type:
          $ref: '#/components/schemas/BookingTypeEnum'
        fullname:
          type: string
          minLength: 1
          maxLength: 100
        id_number:
          type: string
          nullable: true
          maxLength: 100
        phone_number:
          type: string
          minLength: 1
          maxLength: 128
        branch:
          type: integer
          nullable: true
        date:
          type: string
          format: date
        time:
          type: string
          format: time
      required:
      - booking_type
      - date
      - fullname
      - phone_number
      - time
    AppointmentSeriailzerStatusEnum:
      enum:
      - UPCOMING
      - COMPLETED
      - CANCELLED
      type: string
      description: |-
        * `UPCOMING` - Upcoming
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
    BankAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        account_number:
          type: string
          maxLength: 200
        account_name:
          type: string
          maxLength: 200
        account_category:
          type: string
          maxLength: 100
        currency:
          type: string
          maxLength: 20
        default:
          type: boolean
        account_restricted:
          type: boolean
      required:
      - account_category
      - account_name
      - account_number
      - currency
      - id
    BankAccountRequest:
      type: object
      properties:
        account_number:
          type: string
          minLength: 1
          maxLength: 200
        account_name:
          type: string
          minLength: 1
          maxLength: 200
        account_category:
          type: string
          minLength: 1
          maxLength: 100
        currency:
          type: string
          minLength: 1
          maxLength: 20
        default:
          type: boolean
        account_restricted:
          type: boolean
      required:
      - account_category
      - account_name
      - account_number
      - currency
    BankBranch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
        country:
          type: string
          maxLength: 240
        langtitude_cordinates:
          type: string
          nullable: true
          maxLength: 240
        longitude_cordinates:
          type: string
          nullable: true
          maxLength: 240
      required:
      - id
      - name
    BankStatement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        statement_type:
          $ref: '#/components/schemas/StatementTypeEnum'
        source_account:
          type: integer
        source_account_name:
          type: string
          readOnly: true
        source_account_number:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        recipient_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        pick_up_branch:
          type: integer
          nullable: true
        purpose:
          type: string
          maxLength: 240
        status:
          allOf:
          - $ref: '#/components/schemas/Status577Enum'
          readOnly: true
        comments:
          type: string
          readOnly: true
          nullable: true
      required:
      - comments
      - end_date
      - id
      - purpose
      - source_account
      - source_account_name
      - source_account_number
      - start_date
      - status
    BankStatementRequest:
      type: object
      properties:
        statement_type:
          $ref: '#/components/schemas/StatementTypeEnum'
        source_account:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        recipient_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        pick_up_branch:
          type: integer
          nullable: true
        purpose:
          type: string
          minLength: 1
          maxLength: 240
      required:
      - end_date
      - purpose
      - source_account
      - start_date
    Beneficiary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        avatar:
          type: string
          format: uri
          nullable: true
        source_account:
          type: integer
          nullable: true
        network_provider:
          type: integer
          nullable: true
        biller:
          type: integer
          nullable: true
        beneficiary_type:
          $ref: '#/components/schemas/BeneficiaryTypeEnum'
        beneficiary_number:
          type: string
          maxLength: 200
        beneficiary_name:
          type: string
          maxLength: 200
        benficiary_nick_name:
          type: string
          maxLength: 200
        beneficiary_country:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_swift_code:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_bank:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_bank_address:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_iban_number:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        beneficiary_residence_address:
          type: string
          nullable: true
          maxLength: 200
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - beneficiary_name
      - beneficiary_number
      - beneficiary_type
      - benficiary_nick_name
      - date_created
      - id
      - user
    BeneficiaryRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
        source_account:
          type: integer
          nullable: true
        network_provider:
          type: integer
          nullable: true
        biller:
          type: integer
          nullable: true
        beneficiary_type:
          $ref: '#/components/schemas/BeneficiaryTypeEnum'
        beneficiary_number:
          type: string
          minLength: 1
          maxLength: 200
        beneficiary_name:
          type: string
          minLength: 1
          maxLength: 200
        benficiary_nick_name:
          type: string
          minLength: 1
          maxLength: 200
        beneficiary_country:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_swift_code:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_bank:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_bank_address:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_iban_number:
          type: string
          nullable: true
          maxLength: 200
        beneficiary_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        beneficiary_residence_address:
          type: string
          nullable: true
          maxLength: 200
      required:
      - beneficiary_name
      - beneficiary_number
      - beneficiary_type
      - benficiary_nick_name
    BeneficiaryTypeEnum:
      enum:
      - Airtime
      - Data
      - Same Bank
      - Other Bank
      - Account To Wallet
      - International Transfer
      - Bill Payment
      type: string
      description: |-
        * `Airtime` - Airtme
        * `Data` - Data
        * `Same Bank` - Same Bank
        * `Other Bank` - Other Bank
        * `Account To Wallet` - Account To Wallet
        * `International Transfer` - International Transfer
        * `Bill Payment` - Bill Paymnet
    BillSharing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 150
        initiator:
          allOf:
          - $ref: '#/components/schemas/ShortUserInfo'
          readOnly: true
        merchant_number:
          type: string
          maxLength: 100
        merchant_name:
          type: string
          maxLength: 200
        bill_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        paid_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          readOnly: true
        bill_sharing_payees:
          type: array
          items:
            $ref: '#/components/schemas/BillSharingPayeeInfo'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - bill_amount
      - bill_sharing_payees
      - date_created
      - id
      - initiator
      - merchant_name
      - merchant_number
      - paid_amount
      - title
    BillSharingCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 150
        merchant_number:
          type: string
          maxLength: 100
        merchant_name:
          type: string
          maxLength: 200
        bill_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        share_with:
          type: array
          items:
            $ref: '#/components/schemas/CreateBillSharingPayee'
      required:
      - bill_amount
      - merchant_name
      - merchant_number
      - share_with
      - title
    BillSharingCreateRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 150
        merchant_number:
          type: string
          minLength: 1
          maxLength: 100
        merchant_name:
          type: string
          minLength: 1
          maxLength: 200
        bill_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        share_with:
          type: array
          items:
            $ref: '#/components/schemas/CreateBillSharingPayeeRequest'
      required:
      - bill_amount
      - merchant_name
      - merchant_number
      - share_with
      - title
    BillSharingPayee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bill_sharing:
          allOf:
          - $ref: '#/components/schemas/BillSharingShortInfo'
          readOnly: true
        user:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status036Enum'
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - bill_sharing
      - date_created
      - id
    BillSharingPayeeInfo:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/ShortUserInfo'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status036Enum'
        comments:
          type: string
          nullable: true
      required:
      - amount
      - user
    BillSharingPayeeInfoRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status036Enum'
        comments:
          type: string
          nullable: true
      required:
      - amount
    BillSharingPayeeRequest:
      type: object
      properties:
        user:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status036Enum'
      required:
      - amount
    BillSharingShortInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 150
        merchant_number:
          type: string
          maxLength: 100
        merchant_name:
          type: string
          maxLength: 200
        bill_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - bill_amount
      - date_created
      - id
      - merchant_name
      - merchant_number
      - title
    BillSharingShortInfoRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 150
        merchant_number:
          type: string
          minLength: 1
          maxLength: 100
        merchant_name:
          type: string
          minLength: 1
          maxLength: 200
        bill_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
      required:
      - bill_amount
      - merchant_name
      - merchant_number
      - title
    BlankEnum:
      enum:
      - ''
    BookingTypeEnum:
      enum:
      - SELF
      - THIRD PARTY
      type: string
      description: |-
        * `SELF` - Self
        * `THIRD PARTY` - Third Party
    Card:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        card_holder:
          type: string
          readOnly: true
        card_number:
          type: string
          maxLength: 25
          minLength: 13
        card_scheme:
          $ref: '#/components/schemas/CardSchemeEnum'
        card_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CardTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        card_form:
          $ref: '#/components/schemas/CardFormEnum'
        virtual_card_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VirtualCardTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        virtual_card_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          nullable: true
        card_status:
          $ref: '#/components/schemas/CardStatusEnum'
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - card_form
      - card_holder
      - card_number
      - date_created
      - id
      - user
    CardFormEnum:
      enum:
      - PHYSICAL CARD
      - VIRTUAL CARD
      type: string
      description: |-
        * `PHYSICAL CARD` - Physical
        * `VIRTUAL CARD` - Virtual
    CardManagement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        management_type:
          $ref: '#/components/schemas/ManagementTypeEnum'
        card:
          type: integer
          nullable: true
        reason:
          type: string
        through_date:
          type: string
          format: date
          nullable: true
        delivery_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        pick_up_branch:
          type: integer
          nullable: true
        comments:
          type: string
          readOnly: true
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - comments
      - date_created
      - id
      - management_type
      - reason
      - user
    CardManagementRequest:
      type: object
      properties:
        management_type:
          $ref: '#/components/schemas/ManagementTypeEnum'
        card:
          type: integer
          nullable: true
        reason:
          type: string
          minLength: 1
        through_date:
          type: string
          format: date
          nullable: true
        delivery_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        pick_up_branch:
          type: integer
          nullable: true
      required:
      - management_type
      - reason
    CardReason:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reason:
          type: string
          maxLength: 255
      required:
      - id
      - reason
    CardRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        source_account:
          type: integer
        card_type:
          $ref: '#/components/schemas/CardTypeEnum'
        delivery_method:
          $ref: '#/components/schemas/DeliveryMethodEnum'
        pick_up_branch:
          type: integer
          nullable: true
        comments:
          type: string
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/CardStatusEnum'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - card_type
      - comments
      - date_created
      - delivery_method
      - id
      - source_account
      - status
      - user
    CardRequestRequest:
      type: object
      properties:
        source_account:
          type: integer
        card_type:
          $ref: '#/components/schemas/CardTypeEnum'
        delivery_method:
          $ref: '#/components/schemas/DeliveryMethodEnum'
        pick_up_branch:
          type: integer
          nullable: true
      required:
      - card_type
      - delivery_method
      - source_account
    CardSchemeEnum:
      enum:
      - VISA
      - MASTERCARD
      type: string
      description: |-
        * `VISA` - Visa
        * `MASTERCARD` - Mastercard
    CardStatusEnum:
      enum:
      - ACTIVE
      - BLOCKED
      - FROZEN
      - EXPIRED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `BLOCKED` - Blocked
        * `FROZEN` - Frozen
        * `EXPIRED` - Expired
    CardTypeEnum:
      enum:
      - DEBIT CARD
      - CREDIT CARD
      type: string
      description: |-
        * `DEBIT CARD` - Debit
        * `CREDIT CARD` - Credit
    CardlessWithdrawal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        source_account:
          type: integer
          nullable: true
        token_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TokenTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        token:
          type: string
          readOnly: true
          nullable: true
        token_redeemed:
          type: boolean
          readOnly: true
        token_expired:
          type: boolean
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        valid_through:
          type: string
          format: date
        withdrawal_party:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WithdrawalPartyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        recipient_phone_number:
          type: string
          maxLength: 128
        recipient_name:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - date_created
      - id
      - recipient_phone_number
      - token
      - token_expired
      - token_redeemed
      - user
      - valid_through
    CardlessWithdrawalRequest:
      type: object
      properties:
        source_account:
          type: integer
          nullable: true
        token_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TokenTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        valid_through:
          type: string
          format: date
        withdrawal_party:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WithdrawalPartyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        recipient_phone_number:
          type: string
          minLength: 1
          maxLength: 128
        recipient_name:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
      required:
      - amount
      - recipient_phone_number
      - valid_through
    ChargesEnum:
      enum:
      - SELF
      - BENEFICIARY
      type: string
      description: |-
        * `SELF` - Self
        * `BENEFICIARY` - Beneficiary
    ChatMessageRequest:
      type: object
      properties:
        message:
          type: string
          minLength: 1
          maxLength: 5000
        thread_id:
          type: string
          format: uuid
          nullable: true
      required:
      - message
    ChequeRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        cheque_request_type:
          $ref: '#/components/schemas/ChequeRequestTypeEnum'
        source_account:
          type: integer
          nullable: true
        leaves:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LeavesEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        branch:
          type: integer
          nullable: true
        cheque_numbers:
          type: string
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          nullable: true
        reason:
          type: string
          nullable: true
          maxLength: 200
        cheque_date:
          type: string
          format: date
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/ChequeStatusEnum'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - cheque_request_type
      - date_created
      - id
      - status
      - user
    ChequeRequestRequest:
      type: object
      properties:
        cheque_request_type:
          $ref: '#/components/schemas/ChequeRequestTypeEnum'
        source_account:
          type: integer
          nullable: true
        leaves:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LeavesEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        branch:
          type: integer
          nullable: true
        cheque_numbers:
          type: string
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          nullable: true
        reason:
          type: string
          nullable: true
          maxLength: 200
        cheque_date:
          type: string
          format: date
          nullable: true
      required:
      - cheque_request_type
    ChequeRequestTypeEnum:
      enum:
      - CHEQUE REQUEST
      - BLOCK CHEQUE
      - CONFIRM CHEQUE
      type: string
      description: |-
        * `CHEQUE REQUEST` - Cheque Request
        * `BLOCK CHEQUE` - Block Cheque Request
        * `CONFIRM CHEQUE` - Cheque Confirmation
    ChequeStatusEnum:
      enum:
      - PENDING
      - PROCESSING
      - COMPLETED
      - REJECTED
      - FAILED
      type: string
      description: |-
        * `PENDING` - Pending
        * `PROCESSING` - Processing
        * `COMPLETED` - Completed
        * `REJECTED` - Rejected
        * `FAILED` - Failed
    ConversationMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sender:
          $ref: '#/components/schemas/SenderEnum'
        content:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - id
      - sender
      - timestamp
    ConversationThread:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        message_count:
          type: string
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ConversationMessage'
          readOnly: true
        latest_message:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - latest_message
      - message_count
      - messages
      - updated_at
    ConversationThreadCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
    ConversationThreadList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        message_count:
          type: string
          readOnly: true
        latest_message:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - latest_message
      - message_count
      - updated_at
    CreateBillSharingPayee:
      type: object
      properties:
        user:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
      required:
      - amount
      - user
    CreateBillSharingPayeeRequest:
      type: object
      properties:
        user:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
      required:
      - amount
      - user
    CreateVirtualCard:
      type: object
      properties:
        card_scheme:
          $ref: '#/components/schemas/CardSchemeEnum'
        currency:
          type: string
          nullable: true
          maxLength: 50
        virtual_card_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VirtualCardTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    CreateVirtualCardRequest:
      type: object
      properties:
        card_scheme:
          $ref: '#/components/schemas/CardSchemeEnum'
        currency:
          type: string
          nullable: true
          maxLength: 50
        virtual_card_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VirtualCardTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    CustomLoginRequest:
      type: object
      description: Custom Login serializer to overide default dj-rest-auth login
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
      required:
      - password
    CustomerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_account:
          type: integer
        profile_picture:
          type: string
          format: uri
          nullable: true
        nationality:
          type: string
          maxLength: 200
        gender:
          $ref: '#/components/schemas/GenderEnum'
        date_of_birth:
          type: string
          format: date
          nullable: true
        id_number:
          type: string
          nullable: true
          maxLength: 240
        id_type:
          type: string
          nullable: true
          maxLength: 240
        id_front:
          type: string
          format: uri
          nullable: true
        id_back:
          type: string
          format: uri
          nullable: true
        place_of_issue:
          type: string
          nullable: true
          maxLength: 240
        date_of_issuance:
          type: string
          format: date
          nullable: true
        date_of_expiry:
          type: string
          format: date
          nullable: true
        t24_customer_id:
          type: string
          nullable: true
          maxLength: 240
      required:
      - gender
      - id
      - nationality
      - user_account
    DecisionEnum:
      enum:
      - pending
      - approved
      - rejected
      - review
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
        * `review` - Needs Review
    DeliveryMethodEnum:
      enum:
      - Branch PickUp
      type: string
      description: '* `Branch PickUp` - Branch Pickup'
    DocumentTypeEnum:
      enum:
      - passport
      - national_id
      - driver_license
      type: string
      description: |-
        * `passport` - Passport
        * `national_id` - National ID
        * `driver_license` - Driver License
    EmailIndemnity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        source_account:
          type: integer
        primary_email:
          type: string
          format: email
          maxLength: 254
        secondary_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          maxLength: 128
        airtime:
          type: boolean
        data:
          type: boolean
        bill_payment:
          type: boolean
        international_transfer:
          type: boolean
        account_to_wallet:
          type: boolean
        other_bank_transfer:
          type: boolean
        same_bank_transfer:
          type: boolean
        own_account_transfer:
          type: boolean
        merchant_payment:
          type: boolean
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - id
      - last_updated
      - phone_number
      - primary_email
      - source_account
      - user
    EmailIndemnityRequest:
      type: object
      properties:
        source_account:
          type: integer
        primary_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        secondary_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          minLength: 1
          maxLength: 128
        airtime:
          type: boolean
        data:
          type: boolean
        bill_payment:
          type: boolean
        international_transfer:
          type: boolean
        account_to_wallet:
          type: boolean
        other_bank_transfer:
          type: boolean
        same_bank_transfer:
          type: boolean
        own_account_transfer:
          type: boolean
        merchant_payment:
          type: boolean
      required:
      - phone_number
      - primary_email
      - source_account
    ExpenseLimit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        limit_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LimitTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        user:
          type: integer
          readOnly: true
          nullable: true
        account:
          type: integer
          nullable: true
        category:
          type: integer
          nullable: true
        limit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        amount_spent:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ExpenseLimitStatusEnum'
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount_spent
      - date_created
      - end_date
      - id
      - limit_amount
      - start_date
      - status
      - user
    ExpenseLimitRequest:
      type: object
      properties:
        limit_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LimitTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        account:
          type: integer
          nullable: true
        category:
          type: integer
          nullable: true
        limit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
      - end_date
      - limit_amount
      - start_date
    ExpenseLimitStatusEnum:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      description: |-
        * `ACTIVE` - Active
        * `INACTIVE` - Inactive
    ForgotPIN:
      type: object
      properties:
        password:
          type: string
          maxLength: 100
        security_answer:
          type: string
          maxLength: 100
      required:
      - password
      - security_answer
    ForgotPINRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
          maxLength: 100
        security_answer:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - password
      - security_answer
    GenderEnum:
      enum:
      - Male
      - Female
      type: string
      description: |-
        * `Male` - Male
        * `Female` - Female
    IDType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
      required:
      - id
      - name
    IdCard:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        first_name: {}
        middle_name:
          nullable: true
        last_name: {}
        date_of_birth: {}
        gender: {}
        id_number:
          nullable: true
        document_number: {}
        date_of_issue: {}
        date_of_expiry: {}
        country: {}
        state:
          nullable: true
        nationality:
          nullable: true
        mrz:
          nullable: true
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        verified:
          type: boolean
          readOnly: true
        is_confirmed:
          type: boolean
        decision:
          $ref: '#/components/schemas/DecisionEnum'
        review_score:
          type: integer
          readOnly: true
        reject_score:
          type: integer
          readOnly: true
        longitude:
          type: number
          format: double
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        front_image:
          type: string
          readOnly: true
        back_image:
          type: string
          readOnly: true
        self_image:
          type: string
          readOnly: true
        selfie_video:
          type: string
          readOnly: true
        additional_images:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        confidence_score:
          type: number
          format: double
          readOnly: true
        full_name:
          type: string
          readOnly: true
        age:
          type: integer
          nullable: true
          readOnly: true
        expired:
          type: boolean
          nullable: true
          readOnly: true
        low_confidence_fields:
          type: array
          items: {}
          readOnly: true
      required:
      - additional_images
      - age
      - back_image
      - confidence_score
      - created_at
      - document_type
      - expired
      - front_image
      - full_name
      - id
      - low_confidence_fields
      - reject_score
      - review_score
      - self_image
      - selfie_video
      - updated_at
      - user
      - verified
    IdCardConfirm:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          type: string
          maxLength: 20
        id_number:
          type: string
          maxLength: 100
        document_number:
          type: string
          maxLength: 100
        date_of_issue:
          type: string
          format: date
        date_of_expiry:
          type: string
          format: date
        country:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        nationality:
          type: string
          maxLength: 100
    IdCardConfirmRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 100
        middle_name:
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          type: string
          minLength: 1
          maxLength: 20
        id_number:
          type: string
          minLength: 1
          maxLength: 100
        document_number:
          type: string
          minLength: 1
          maxLength: 100
        date_of_issue:
          type: string
          format: date
        date_of_expiry:
          type: string
          format: date
        country:
          type: string
          minLength: 1
          maxLength: 100
        state:
          type: string
          minLength: 1
          maxLength: 100
        nationality:
          type: string
          minLength: 1
          maxLength: 100
    IdCardCreate:
      type: object
      properties:
        document_type:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          description: |-
            Type of document being uploaded

            * `passport` - Passport
            * `national_id` - National ID
            * `driver_license` - Driver License
        image_front:
          type: string
          format: uri
          description: Front side of the ID document
        image_back:
          type: string
          format: uri
          description: Back side of the ID document (optional for some documents)
        selfie:
          type: string
          format: uri
          description: Selfie photo for verification
        selfie_video:
          type: string
          format: uri
          description: Optional selfie video for enhanced verification
      required:
      - document_type
      - image_front
      - selfie
    IdCardCreateRequest:
      type: object
      properties:
        document_type:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          description: |-
            Type of document being uploaded

            * `passport` - Passport
            * `national_id` - National ID
            * `driver_license` - Driver License
        image_front:
          type: string
          format: binary
          description: Front side of the ID document
        image_back:
          type: string
          format: binary
          description: Back side of the ID document (optional for some documents)
        selfie:
          type: string
          format: binary
          description: Selfie photo for verification
        selfie_video:
          type: string
          format: binary
          description: Optional selfie video for enhanced verification
      required:
      - document_type
      - image_front
      - selfie
    IntervalEnum:
      enum:
      - Daily
      - Weekly
      - Monthly
      - Yearly
      type: string
      description: |-
        * `Daily` - Daily
        * `Weekly` - Weekly
        * `Monthly` - Monthly
        * `Yearly` - Yearly
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access:
          type: string
        refresh:
          type: string
        user:
          $ref: '#/components/schemas/UserDetails'
      required:
      - access
      - refresh
      - user
    LeavesEnum:
      enum:
      - 10 LEAVES
      - 25 LEAVES
      - 50 LEAVES
      - 75 LEAVES
      - 100 LEAVES
      - 150 LEAVES
      type: string
      description: |-
        * `10 LEAVES` - Ten
        * `25 LEAVES` - Twenty Five
        * `50 LEAVES` - Fifty
        * `75 LEAVES` - Seventy Five
        * `100 LEAVES` - Hundred
        * `150 LEAVES` - One Fifty
    LimitTypeEnum:
      enum:
      - Account Budget
      - Categorical Budget
      type: string
      description: |-
        * `Account Budget` - Account Budget
        * `Categorical Budget` - Categorical Budget
    LoanCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_id:
          type: string
          nullable: true
          maxLength: 100
        loan_product_group:
          type: string
          nullable: true
          maxLength: 100
        amount:
          type: string
          nullable: true
          maxLength: 100
        interest:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 100
        term:
          type: string
          nullable: true
          maxLength: 100
        processing_fee:
          type: string
          nullable: true
          maxLength: 100
      required:
      - id
    LoanFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
      required:
      - file
      - id
    LoanRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        application_id:
          type: string
          readOnly: true
          nullable: true
        source_account:
          type: integer
          nullable: true
        loan_category:
          allOf:
          - $ref: '#/components/schemas/LoanCategory'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        duration:
          type: string
          nullable: true
          maxLength: 100
        comments:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/LoanStatusEnum'
        files:
          type: array
          items:
            $ref: '#/components/schemas/LoanFile'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - application_id
      - date_created
      - files
      - id
      - loan_category
      - user
    LoanRequestCreate:
      type: object
      properties:
        source_account:
          type: integer
          nullable: true
        loan_category:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        duration:
          type: string
          nullable: true
          maxLength: 100
        files:
          type: array
          items:
            type: string
            format: uri
      required:
      - amount
    LoanRequestCreateRequest:
      type: object
      properties:
        source_account:
          type: integer
          nullable: true
        loan_category:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        duration:
          type: string
          nullable: true
          maxLength: 100
        files:
          type: array
          items:
            type: string
            format: binary
      required:
      - amount
    LoanStatusEnum:
      enum:
      - PENDING
      - REVIEWING
      - APPROVED
      - ACTION REQUIRED
      - REJECTED
      type: string
      description: |-
        * `PENDING` - Pending
        * `REVIEWING` - Reviewing
        * `APPROVED` - Approved
        * `ACTION REQUIRED` - Action Required
        * `REJECTED` - Rejected
    MakeBillSharingPaymentAccount:
      type: object
      properties:
        account_number:
          type: string
      required:
      - account_number
    MakeBillSharingPaymentAccountRequest:
      type: object
      properties:
        account_number:
          type: string
          minLength: 1
      required:
      - account_number
    ManagementTypeEnum:
      enum:
      - RENEW CARD
      - REPLACE CARD
      - BLOCK CARD
      - FREEZE CARD
      - UNFREEZE CARD
      type: string
      description: |-
        * `RENEW CARD` - Renew Card
        * `REPLACE CARD` - Replace Card
        * `BLOCK CARD` - Block Card
        * `FREEZE CARD` - Freeze Card
        * `UNFREEZE CARD` - Unfreeze Card
    NetworkProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
        code:
          type: string
          nullable: true
          maxLength: 100
        country:
          type: string
          maxLength: 100
        active:
          type: boolean
      required:
      - country
      - id
      - name
    NetworkProviderRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 240
        code:
          type: string
          nullable: true
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        active:
          type: boolean
      required:
      - country
      - name
    NullEnum:
      enum:
      - null
    Occupation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
      required:
      - id
      - name
    OnboardingStage:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        stage:
          $ref: '#/components/schemas/StageEnum'
        stage_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - stage_display
      - updated_at
      - user
    OtherBank:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
        code:
          type: string
          nullable: true
          maxLength: 100
        country:
          type: string
          maxLength: 100
      required:
      - country
      - id
      - name
    OtherBankRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 240
        code:
          type: string
          nullable: true
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - country
      - name
    PaginatedATMList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ATM'
    PaginatedAccountCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountCategory'
    PaginatedAppointmentSeriailzerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentSeriailzer'
    PaginatedBankAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
    PaginatedBankBranchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankBranch'
    PaginatedBankStatementList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankStatement'
    PaginatedBeneficiaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Beneficiary'
    PaginatedBillSharingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BillSharing'
    PaginatedBillSharingPayeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BillSharingPayee'
    PaginatedCardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Card'
    PaginatedCardManagementList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CardManagement'
    PaginatedCardReasonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CardReason'
    PaginatedCardRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CardRequest'
    PaginatedCardlessWithdrawalList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CardlessWithdrawal'
    PaginatedChequeRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChequeRequest'
    PaginatedConversationThreadListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConversationThreadList'
    PaginatedEmailIndemnityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailIndemnity'
    PaginatedExpenseLimitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseLimit'
    PaginatedIDTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/IDType'
    PaginatedIdCardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/IdCard'
    PaginatedLoanCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LoanCategory'
    PaginatedLoanRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LoanRequest'
    PaginatedNetworkProviderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProvider'
    PaginatedOccupationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Occupation'
    PaginatedOtherBankList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OtherBank'
    PaginatedPaymentBillerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentBiller'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedSecurityQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SecurityQuestion'
    PaginatedStandingOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StandingOrder'
    PaginatedSwiftCodeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SwiftCode'
    PaginatedTelcoDataPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TelcoDataPlan'
    PaginatedTermsAndConditionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TermsAndCondition'
    PaginatedTranscationPurposeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TranscationPurpose'
    PaginatedTransferList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
    PaginatedTravelNoticeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TravelNotice'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordChangeRequest:
      type: object
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PatchedBillSharingRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 150
        merchant_number:
          type: string
          minLength: 1
          maxLength: 100
        merchant_name:
          type: string
          minLength: 1
          maxLength: 200
        bill_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
    PatchedEmailIndemnityRequest:
      type: object
      properties:
        source_account:
          type: integer
        primary_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        secondary_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          minLength: 1
          maxLength: 128
        airtime:
          type: boolean
        data:
          type: boolean
        bill_payment:
          type: boolean
        international_transfer:
          type: boolean
        account_to_wallet:
          type: boolean
        other_bank_transfer:
          type: boolean
        same_bank_transfer:
          type: boolean
        own_account_transfer:
          type: boolean
        merchant_payment:
          type: boolean
    PatchedIdCardConfirmRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 100
        middle_name:
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          type: string
          minLength: 1
          maxLength: 20
        id_number:
          type: string
          minLength: 1
          maxLength: 100
        document_number:
          type: string
          minLength: 1
          maxLength: 100
        date_of_issue:
          type: string
          format: date
        date_of_expiry:
          type: string
          format: date
        country:
          type: string
          minLength: 1
          maxLength: 100
        state:
          type: string
          minLength: 1
          maxLength: 100
        nationality:
          type: string
          minLength: 1
          maxLength: 100
    PatchedSetCusotmerPINRequest:
      type: object
      properties:
        secure_pin:
          type: string
          nullable: true
          maxLength: 240
    PatchedTransferRequest:
      type: object
      properties:
        transfer_type:
          $ref: '#/components/schemas/TransferTypeEnum'
        source_account:
          type: integer
        recipient_account:
          type: string
          minLength: 1
          maxLength: 100
        recipient_name:
          type: string
          nullable: true
          maxLength: 100
        recipient_bank:
          type: string
          nullable: true
          maxLength: 100
        recipient_swift_code:
          type: string
          nullable: true
          maxLength: 100
        recipient_phone_number:
          type: string
          nullable: true
          maxLength: 100
        recipient_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        recipient_residence_address:
          type: string
          nullable: true
          maxLength: 100
        recipient_country:
          type: string
          nullable: true
          maxLength: 100
        recipient_iban_number:
          type: string
          nullable: true
          maxLength: 100
        charges:
          $ref: '#/components/schemas/ChargesEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          nullable: true
          maxLength: 10
        purpose_of_transaction:
          type: string
          minLength: 1
          maxLength: 240
        network:
          type: string
          nullable: true
          maxLength: 100
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        initiater_info:
          type: string
          readOnly: true
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        source_account:
          type: integer
        source_account_name:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        currency:
          type: string
          readOnly: true
          nullable: true
        network_provider:
          type: integer
          nullable: true
        beneficiary:
          type: string
          nullable: true
          maxLength: 240
        beneficiary_name:
          type: string
          nullable: true
          maxLength: 100
        purpose_of_transaction:
          type: string
          maxLength: 200
        biller:
          type: integer
          nullable: true
        data_plan:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status577Enum'
          readOnly: true
        reference:
          type: string
          readOnly: true
          nullable: true
        t24_reference:
          type: string
          nullable: true
          maxLength: 240
        failed_reason:
          type: string
          readOnly: true
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - currency
      - date_created
      - failed_reason
      - id
      - initiater_info
      - last_updated
      - payment_type
      - purpose_of_transaction
      - reference
      - source_account
      - source_account_name
      - status
    PaymentBiller:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
        biller_account:
          type: string
          maxLength: 100
        biller_logo:
          type: string
          format: uri
          nullable: true
      required:
      - biller_account
      - id
      - name
    PaymentBillerRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 240
        biller_account:
          type: string
          minLength: 1
          maxLength: 100
        biller_logo:
          type: string
          format: binary
          nullable: true
      required:
      - biller_account
      - name
    PaymentRequest:
      type: object
      properties:
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        source_account:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        network_provider:
          type: integer
          nullable: true
        beneficiary:
          type: string
          nullable: true
          maxLength: 240
        beneficiary_name:
          type: string
          nullable: true
          maxLength: 100
        purpose_of_transaction:
          type: string
          minLength: 1
          maxLength: 200
        biller:
          type: integer
          nullable: true
        data_plan:
          type: integer
          nullable: true
        t24_reference:
          type: string
          nullable: true
          maxLength: 240
      required:
      - amount
      - payment_type
      - purpose_of_transaction
      - source_account
    PaymentTypeEnum:
      enum:
      - Airtime
      - Data
      - Bill Payment
      type: string
      description: |-
        * `Airtime` - Airtime
        * `Data` - Data
        * `Bill Payment` - Bill Payment
    RejectBillSharingRequest:
      type: object
      properties:
        reason:
          type: string
      required:
      - reason
    RejectBillSharingRequestRequest:
      type: object
      properties:
        reason:
          type: string
          minLength: 1
      required:
      - reason
    ResetPassword:
      type: object
      description: |-
        this is the serializer for reseting password by providing otp sent
        for password reset and proviving your new password.
      properties:
        username:
          type: string
          maxLength: 100
        otp:
          type: string
          maxLength: 20
        new_password:
          type: string
      required:
      - new_password
      - otp
      - username
    ResetPasswordOtp:
      type: object
      description: |-
        this seriailzer sends an otp for password reset. this endpoints is
        used when the user has forggoten his/her password and wants to
        reset.
      properties:
        username:
          type: string
      required:
      - username
    ResetPasswordOtpRequest:
      type: object
      description: |-
        this seriailzer sends an otp for password reset. this endpoints is
        used when the user has forggoten his/her password and wants to
        reset.
      properties:
        username:
          type: string
          minLength: 1
      required:
      - username
    ResetPasswordRequest:
      type: object
      description: |-
        this is the serializer for reseting password by providing otp sent
        for password reset and proviving your new password.
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 100
        otp:
          type: string
          minLength: 1
          maxLength: 20
        new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - otp
      - username
    SecurityQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          maxLength: 500
      required:
      - id
      - question
    SenderEnum:
      enum:
      - human
      - ai
      type: string
      description: |-
        * `human` - Human
        * `ai` - AI
    ServiceTypeEnum:
      enum:
      - CASH DEPOSIT
      - CASH WITHDRAWAL
      - CHEQUE DEPOSIT
      - CHEQUE WITHDRAWAL
      - ENQUIRY
      type: string
      description: |-
        * `CASH DEPOSIT` - Cash Deposit
        * `CASH WITHDRAWAL` - Cash Withdrawal
        * `CHEQUE DEPOSIT` - Cheque Deposit
        * `CHEQUE WITHDRAWAL` - Cheque Withdrawal
        * `ENQUIRY` - Enquiry
    SetCusotmerPIN:
      type: object
      properties:
        secure_pin:
          type: string
          nullable: true
          maxLength: 240
    ShortUserInfo:
      type: object
      properties:
        fullname:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        profile_picture:
          type: string
          format: uri
      required:
      - email
      - profile_picture
    ShortUserInfoRequest:
      type: object
      properties:
        fullname:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        profile_picture:
          type: string
          format: binary
      required:
      - email
      - profile_picture
    SignUpExistingCustomer:
      type: object
      properties:
        email:
          type: string
          format: email
        account_number:
          type: string
        security_questions:
          type: array
          items:
            $ref: '#/components/schemas/SignupSecurityQuestion'
        password:
          type: string
        secure_pin:
          type: string
        verification_code:
          type: string
      required:
      - account_number
      - email
      - password
      - secure_pin
      - security_questions
      - verification_code
    SignUpExistingCustomerEmailAccountValidation:
      type: object
      properties:
        email:
          type: string
          format: email
        account_number:
          type: string
      required:
      - account_number
      - email
    SignUpExistingCustomerEmailAccountValidationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        account_number:
          type: string
          minLength: 1
      required:
      - account_number
      - email
    SignUpExistingCustomerRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        account_number:
          type: string
          minLength: 1
        security_questions:
          type: array
          items:
            $ref: '#/components/schemas/SignupSecurityQuestionRequest'
        password:
          type: string
          minLength: 1
        secure_pin:
          type: string
          minLength: 1
        verification_code:
          type: string
          minLength: 1
      required:
      - account_number
      - email
      - password
      - secure_pin
      - security_questions
      - verification_code
    SignUpExistingCustomerVerify:
      type: object
      properties:
        email:
          type: string
          format: email
        otp_code:
          type: string
      required:
      - email
      - otp_code
    SignUpExistingCustomerVerifyRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        otp_code:
          type: string
          minLength: 1
      required:
      - email
      - otp_code
    SignUpNewCustomer:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone_number:
          type: string
        nationality:
          type: string
        gender:
          type: string
        date_of_birth:
          type: string
          format: date
        profile_picture:
          type: string
          format: uri
        id_front:
          type: string
          format: uri
        id_back:
          type: string
          format: uri
          nullable: true
        id_number:
          type: string
        date_of_issuance:
          type: string
          format: date
        date_of_expiry:
          type: string
          format: date
        place_of_issuance:
          type: string
        security_questions:
          type: array
          items:
            $ref: '#/components/schemas/SignupSecurityQuestion'
        password:
          type: string
        secure_pin:
          type: string
        verification_code:
          type: string
      required:
      - date_of_birth
      - date_of_expiry
      - date_of_issuance
      - email
      - first_name
      - gender
      - id_front
      - id_number
      - last_name
      - nationality
      - password
      - phone_number
      - place_of_issuance
      - profile_picture
      - secure_pin
      - security_questions
      - verification_code
    SignUpNewCustomerRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
        last_name:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        phone_number:
          type: string
          minLength: 1
        nationality:
          type: string
          minLength: 1
        gender:
          type: string
          minLength: 1
        date_of_birth:
          type: string
          format: date
        profile_picture:
          type: string
          format: binary
        id_front:
          type: string
          format: binary
        id_back:
          type: string
          format: binary
          nullable: true
        id_number:
          type: string
          minLength: 1
        date_of_issuance:
          type: string
          format: date
        date_of_expiry:
          type: string
          format: date
        place_of_issuance:
          type: string
          minLength: 1
        security_questions:
          type: array
          items:
            $ref: '#/components/schemas/SignupSecurityQuestionRequest'
        password:
          type: string
          minLength: 1
        secure_pin:
          type: string
          minLength: 1
        verification_code:
          type: string
          minLength: 1
      required:
      - date_of_birth
      - date_of_expiry
      - date_of_issuance
      - email
      - first_name
      - gender
      - id_front
      - id_number
      - last_name
      - nationality
      - password
      - phone_number
      - place_of_issuance
      - profile_picture
      - secure_pin
      - security_questions
      - verification_code
    SignUpNewCustomerValidation:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
        phone_number:
          type: string
    SignUpNewCustomerValidationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          minLength: 1
        phone_number:
          type: string
          minLength: 1
    SignUpNewCustomerVerify:
      type: object
      properties:
        email:
          type: string
          format: email
        email_otp:
          type: string
        phone:
          type: string
        phone_otp:
          type: string
    SignUpNewCustomerVerifyRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        email_otp:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
        phone_otp:
          type: string
          minLength: 1
    SignupSecurityQuestion:
      type: object
      properties:
        question:
          type: integer
        answer:
          type: string
      required:
      - answer
      - question
    SignupSecurityQuestionRequest:
      type: object
      properties:
        question:
          type: integer
        answer:
          type: string
          minLength: 1
      required:
      - answer
      - question
    StageEnum:
      enum:
      - document_upload
      - id_verification
      - id_confirmation
      - liveness_check
      - completed
      type: string
      description: |-
        * `document_upload` - Document Upload
        * `id_verification` - ID Verification
        * `id_confirmation` - ID Confirmation
        * `liveness_check` - Liveness Check
        * `completed` - Completed
    StandingOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        source_account:
          type: integer
          nullable: true
        standing_order_type:
          $ref: '#/components/schemas/StandingOrderTypeEnum'
        other_bank:
          type: integer
          nullable: true
        network_provider:
          type: integer
          nullable: true
        recipient_account:
          type: string
          maxLength: 200
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        purpose_of_transaction:
          type: string
          maxLength: 200
        interval:
          $ref: '#/components/schemas/IntervalEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StandingOrderStatusEnum'
          readOnly: true
      required:
      - amount
      - end_date
      - id
      - interval
      - purpose_of_transaction
      - recipient_account
      - standing_order_type
      - start_date
      - status
      - user
    StandingOrderRequest:
      type: object
      properties:
        source_account:
          type: integer
          nullable: true
        standing_order_type:
          $ref: '#/components/schemas/StandingOrderTypeEnum'
        other_bank:
          type: integer
          nullable: true
        network_provider:
          type: integer
          nullable: true
        recipient_account:
          type: string
          minLength: 1
          maxLength: 200
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        purpose_of_transaction:
          type: string
          minLength: 1
          maxLength: 200
        interval:
          $ref: '#/components/schemas/IntervalEnum'
      required:
      - amount
      - end_date
      - interval
      - purpose_of_transaction
      - recipient_account
      - standing_order_type
      - start_date
    StandingOrderStatusEnum:
      enum:
      - Active
      - Inactive
      type: string
      description: |-
        * `Active` - Active
        * `Inactive` - Inactive
    StandingOrderTypeEnum:
      enum:
      - Airtime
      - Same Bank
      - Other Bank
      - Account To Wallet
      - Bill Payment
      type: string
      description: |-
        * `Airtime` - Own Account Transfer
        * `Same Bank` - Same Bank
        * `Other Bank` - Other Bank
        * `Account To Wallet` - Account To Wallet
        * `Bill Payment` - Bill Paymnet
    StatementTypeEnum:
      enum:
      - Official Statement
      type: string
      description: '* `Official Statement` - Official Statement'
    Status036Enum:
      enum:
      - PENDING
      - PAID
      - REJECTED
      - FAILED
      type: string
      description: |-
        * `PENDING` - Pending
        * `PAID` - Paid
        * `REJECTED` - Rejected
        * `FAILED` - Failed
    Status577Enum:
      enum:
      - Pending
      - Success
      - Failed
      type: string
      description: |-
        * `Pending` - Pending
        * `Success` - Success
        * `Failed` - Failed
    SwiftCode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        swift_code:
          type: string
          maxLength: 50
        bank_name:
          type: string
          maxLength: 100
        bank_address:
          type: string
          maxLength: 200
      required:
      - bank_address
      - bank_name
      - id
      - swift_code
    SwiftCodeRequest:
      type: object
      properties:
        swift_code:
          type: string
          minLength: 1
          maxLength: 50
        bank_name:
          type: string
          minLength: 1
          maxLength: 100
        bank_address:
          type: string
          minLength: 1
          maxLength: 200
      required:
      - bank_address
      - bank_name
      - swift_code
    TelcoDataPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        network:
          type: integer
        name:
          type: string
          maxLength: 240
        data:
          type: string
          maxLength: 240
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
      required:
      - data
      - id
      - name
      - network
      - price
    TermsAndCondition:
      type: object
      properties:
        mobile_terms_and_conditions:
          type: string
          nullable: true
        account_opening_terms_and_conditions:
          type: string
          nullable: true
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenTypeEnum:
      enum:
      - ATM
      - MERCHANT
      type: string
      description: |-
        * `ATM` - Atm
        * `MERCHANT` - Merchant
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    TranscationPurpose:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 240
      required:
      - id
      - name
    Transfer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        initiater_info:
          type: string
          readOnly: true
        transfer_type:
          $ref: '#/components/schemas/TransferTypeEnum'
        source_account:
          type: integer
        source_account_name:
          type: string
          readOnly: true
        recipient_account:
          type: string
          maxLength: 100
        recipient_name:
          type: string
          nullable: true
          maxLength: 100
        recipient_bank:
          type: string
          nullable: true
          maxLength: 100
        recipient_swift_code:
          type: string
          nullable: true
          maxLength: 100
        recipient_phone_number:
          type: string
          nullable: true
          maxLength: 100
        recipient_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        recipient_residence_address:
          type: string
          nullable: true
          maxLength: 100
        recipient_country:
          type: string
          nullable: true
          maxLength: 100
        recipient_iban_number:
          type: string
          nullable: true
          maxLength: 100
        charges:
          $ref: '#/components/schemas/ChargesEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          nullable: true
          maxLength: 10
        purpose_of_transaction:
          type: string
          maxLength: 240
        network:
          type: string
          nullable: true
          maxLength: 100
        status:
          allOf:
          - $ref: '#/components/schemas/Status577Enum'
          readOnly: true
        reference:
          type: string
          readOnly: true
        t24_reference:
          type: string
          readOnly: true
          nullable: true
        can_approve:
          type: string
          readOnly: true
        failed_reason:
          type: string
          readOnly: true
          nullable: true
        comments:
          type: string
          readOnly: true
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - can_approve
      - comments
      - date_created
      - failed_reason
      - id
      - initiater_info
      - purpose_of_transaction
      - recipient_account
      - reference
      - source_account
      - source_account_name
      - status
      - t24_reference
      - transfer_type
      - user
    TransferRequest:
      type: object
      properties:
        transfer_type:
          $ref: '#/components/schemas/TransferTypeEnum'
        source_account:
          type: integer
        recipient_account:
          type: string
          minLength: 1
          maxLength: 100
        recipient_name:
          type: string
          nullable: true
          maxLength: 100
        recipient_bank:
          type: string
          nullable: true
          maxLength: 100
        recipient_swift_code:
          type: string
          nullable: true
          maxLength: 100
        recipient_phone_number:
          type: string
          nullable: true
          maxLength: 100
        recipient_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        recipient_residence_address:
          type: string
          nullable: true
          maxLength: 100
        recipient_country:
          type: string
          nullable: true
          maxLength: 100
        recipient_iban_number:
          type: string
          nullable: true
          maxLength: 100
        charges:
          $ref: '#/components/schemas/ChargesEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          nullable: true
          maxLength: 10
        purpose_of_transaction:
          type: string
          minLength: 1
          maxLength: 240
        network:
          type: string
          nullable: true
          maxLength: 100
      required:
      - amount
      - purpose_of_transaction
      - recipient_account
      - source_account
      - transfer_type
    TransferTypeEnum:
      enum:
      - Own Account Transfer
      - Same Bank Transfer
      - Other Bank Transfer
      - International Transfer
      - Account To Wallet
      type: string
      description: |-
        * `Own Account Transfer` - Own Account Transfer
        * `Same Bank Transfer` - Same Bank Transfer
        * `Other Bank Transfer` - Other Bank Transfer
        * `International Transfer` - International Transfer
        * `Account To Wallet` - Account To Wallet
    TravelNotice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        departure_date:
          type: string
          format: date
        return_date:
          type: string
          format: date
        source_account:
          type: integer
        card:
          type: integer
          nullable: true
        alternative_phone:
          type: string
          nullable: true
          maxLength: 128
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - departure_date
      - id
      - return_date
      - source_account
      - user
    TravelNoticeRequest:
      type: object
      properties:
        departure_date:
          type: string
          format: date
        return_date:
          type: string
          format: date
        source_account:
          type: integer
        card:
          type: integer
          nullable: true
        alternative_phone:
          type: string
          nullable: true
          maxLength: 128
      required:
      - departure_date
      - return_date
      - source_account
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        fullname:
          type: string
          nullable: true
          maxLength: 100
        password_set:
          type: boolean
        secure_pin_set:
          type: string
          readOnly: true
        deactivated_account:
          type: boolean
        last_login:
          type: string
          format: date-time
          nullable: true
        last_login_ip:
          type: string
          nullable: true
        customer_profile:
          allOf:
          - $ref: '#/components/schemas/CustomerProfile'
          readOnly: true
      required:
      - customer_profile
      - email
      - id
      - secure_pin_set
      - username
    ValidateAccountNumber:
      type: object
      properties:
        account_number:
          type: string
          maxLength: 100
      required:
      - account_number
    ValidateAccountNumberRequest:
      type: object
      properties:
        account_number:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - account_number
    ValidateBillerNumber:
      type: object
      properties:
        biller_number:
          type: string
          maxLength: 100
      required:
      - biller_number
    ValidateBillerNumberRequest:
      type: object
      properties:
        biller_number:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - biller_number
    ValidateCardlessWithdrawalToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    ValidateCardlessWithdrawalTokenRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 1
      required:
      - token
    ValidatePhoneNumberSeriailzer:
      type: object
      properties:
        phone_number:
          type: string
      required:
      - phone_number
    ValidatePhoneNumberSeriailzerRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 1
      required:
      - phone_number
    ValidateSwiftCode:
      type: object
      properties:
        swift_code:
          type: string
      required:
      - swift_code
    ValidateSwiftCodeRequest:
      type: object
      properties:
        swift_code:
          type: string
          minLength: 1
      required:
      - swift_code
    VerifyOldPassword:
      type: object
      description: this serializer checks and validate the old password
      properties:
        password:
          type: string
          maxLength: 100
      required:
      - password
    VerifyOldPasswordRequest:
      type: object
      description: this serializer checks and validate the old password
      properties:
        password:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - password
    VerifyPIN:
      type: object
      properties:
        pin:
          type: string
          maxLength: 100
      required:
      - pin
    VerifyPINRequest:
      type: object
      properties:
        pin:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - pin
    VerifyResetPasswordOtp:
      type: object
      description: this serializer checks and validate the otp sent for password reset
      properties:
        otp:
          type: string
          maxLength: 6
        username:
          type: string
          maxLength: 100
      required:
      - otp
      - username
    VerifyResetPasswordOtpRequest:
      type: object
      description: this serializer checks and validate the otp sent for password reset
      properties:
        otp:
          type: string
          minLength: 1
          maxLength: 6
        username:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - otp
      - username
    VirtualCardTopUp:
      type: object
      properties:
        account_number:
          type: string
        amount:
          type: integer
      required:
      - account_number
      - amount
    VirtualCardTopUpRequest:
      type: object
      properties:
        account_number:
          type: string
          minLength: 1
        amount:
          type: integer
      required:
      - account_number
      - amount
    VirtualCardTypeEnum:
      enum:
      - GIFT CARD
      - SHOPPING CARD
      type: string
      description: |-
        * `GIFT CARD` - Gift Card
        * `SHOPPING CARD` - Shopping Card
    WithdrawalPartyEnum:
      enum:
      - SELF
      - THIRD_PARTY
      type: string
      description: |-
        * `SELF` - Self
        * `THIRD_PARTY` - Third Party
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
