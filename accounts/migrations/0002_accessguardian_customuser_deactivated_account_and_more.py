# Generated by Django 5.2.1 on 2025-06-06 19:17

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0001_initial"),
        ("datatable", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccessGuardian",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("log_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_customer", models.BooleanField(default=False)),
                ("ip_address", models.CharField(blank=True, max_length=40, null=True)),
                ("device", models.CharField(blank=True, max_length=20, null=True)),
                ("browser", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "browser_version",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("os", models.CharField(blank=True, max_length=20, null=True)),
                ("os_version", models.CharField(blank=True, max_length=20, null=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("-date_created",),
            },
        ),
        migrations.AddField(
            model_name="customuser",
            name="deactivated_account",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="customuser",
            name="fcm_app_token",
            field=models.CharField(blank=True, max_length=240, null=True),
        ),
        migrations.AddField(
            model_name="customuser",
            name="fullname",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="customuser",
            name="last_login_ip",
            field=models.CharField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="customuser",
            name="last_seen",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="customuser",
            name="password_set",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="customuser",
            name="phone_number",
            field=phonenumber_field.modelfields.PhoneNumberField(
                blank=True, max_length=128, null=True, region=None, unique=True
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="secure_pin",
            field=models.CharField(blank=True, max_length=240, null=True),
        ),
        migrations.AddField(
            model_name="customuser",
            name="uuid",
            field=models.UUIDField(
                blank=True, default=uuid.uuid4, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="email",
            field=models.EmailField(
                db_index=True, max_length=254, unique=True, verbose_name="email address"
            ),
        ),
        migrations.CreateModel(
            name="CustomerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("nationality", models.CharField(max_length=200)),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")], max_length=10
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("id_number", models.CharField(blank=True, max_length=240, null=True)),
                ("id_type", models.CharField(blank=True, max_length=240, null=True)),
                (
                    "id_front",
                    models.ImageField(blank=True, null=True, upload_to="id_front/"),
                ),
                (
                    "id_back",
                    models.ImageField(blank=True, null=True, upload_to="id_back/"),
                ),
                (
                    "place_of_issue",
                    models.CharField(blank=True, max_length=240, null=True),
                ),
                ("date_of_issuance", models.DateField(blank=True, null=True)),
                ("date_of_expiry", models.DateField(blank=True, null=True)),
                (
                    "t24_customer_id",
                    models.CharField(blank=True, max_length=240, null=True),
                ),
                ("mnemonic", models.CharField(blank=True, max_length=240, null=True)),
                (
                    "uuid",
                    models.UUIDField(
                        blank=True, default=uuid.uuid4, null=True, unique=True
                    ),
                ),
                ("extra_data", models.TextField(blank=True, null=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "user_account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("user_account",),
            },
        ),
        migrations.CreateModel(
            name="UserSecurityQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer_hash", models.CharField(max_length=128)),
                (
                    "uuid",
                    models.UUIDField(
                        blank=True, default=uuid.uuid4, null=True, unique=True
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datatable.securityquestion",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "question")},
            },
        ),
    ]
